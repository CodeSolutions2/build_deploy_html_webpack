name: Deploy React with GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - '**.txt'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Step 0 - Checkout - obtain files from from repository 
        uses: actions/checkout@v4

      - name: Step 1 - Setup Pages
        uses: actions/configure-pages@v5

      - name: Step 2 - Setup/install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
        
      - name: Step 3 - Install gh-pages from npm
        run: npm install -g gh-pages
        
      - name: Step 4 - Upload Artifact - update files in the repository
        uses: actions/upload-artifact@v4
        with:
          name: react-app-artifacts
          path: ./

      - name: Step 5 - Deploy React app to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          repoOwner=$(echo "${{ github.repository }}" | cut -d '/' -f 1);
          repoOwnerEmail="j622amilah@gmail.com";
          repoName=$(echo "${{ github.repository }}" | cut -d '/' -f 2);
          
          git config --global user.email ${repoOwnerEmail};
          git config --global user.name ${repoOwner};
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/${repoOwner}/${repoName}.git
          npm run build

        
